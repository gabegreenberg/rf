'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _reactRouter = require('react-router');

var _useStandardScroll = require('scroll-behavior/lib/useStandardScroll');

var _useStandardScroll2 = _interopRequireDefault(_useStandardScroll);

var _createRoutes = require('create-routes');

var _createRoutes2 = _interopRequireDefault(_createRoutes);

var _gatsbyBrowser = require('gatsby-browser');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scrollHistory = (0, _useStandardScroll2.default)(function () {
  return _reactRouter.browserHistory;
})();

var loadContext = require('.gatsby-context');


function loadConfig(cb) {
  var stuff = require('config');
  if (module.hot) {
    module.hot.accept(stuff.id, function () {
      return cb();
    });
  }
  return cb();
}

_reactRouter.browserHistory.listen(function (location) {
  if (_gatsbyBrowser.onRouteChange) {
    (0, _gatsbyBrowser.onRouteChange)(location);
  }
});

var routes = void 0;
loadConfig(function () {
  return loadContext(function (pagesReq) {
    var _require = require('config');

    var pages = _require.pages;

    if (!routes) {
      routes = (0, _createRoutes2.default)(pages, pagesReq);
    } else {
      (0, _createRoutes2.default)(pages, pagesReq);
    }

    _reactDom2.default.render(_react2.default.createElement(_reactRouter.Router, {
      history: scrollHistory,
      routes: routes
    }), typeof window !== 'undefined' ? document.getElementById('react-mount') : void 0);
  });
});